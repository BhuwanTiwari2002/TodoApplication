@page "/calendar"
@attribute [Authorize]
<html>
    <body>
        <h3>@MonthName</h3>
        <button @onclick="() => { monthsAway--; CreateMonth(); }">Previous Month</button>
        <h1>@MonthName</h1>
    <button @onclick="() => { monthsAway++; CreateMonth(); }">Next Month</button>
        <section>
            @for (int dummyCol = 0; dummyCol < numberOfDummyColumn; dummyCol++)
            {
                <div></div>
            }

            @for (int day = 1; day <= monthEnd.Day; day++)
            {
                <div>@day</div>
            }
        </section>
    </body>
</html>

@code {
    string MonthName = "";
    DateTime monthEnd;
    int numberOfDummyColumn = 0;
    int monthsAway = 0;
    protected override void OnInitialized()
    {
        CreateMonth();
    }

    void CreateMonth()
    {
        int year = DateTime.Now.Year;
        int month = DateTime.Now.Month + monthsAway;
        var tempDate = DateTime.Now.AddMonths(monthsAway);
        month = tempDate.Month;
        year = tempDate.Year;
        DateTime monthStart = new DateTime(DateTime.Now.Year + year, month, 1); //2023 June 1
        monthEnd = monthStart.AddMonths(1).AddDays(-1); // Add a whole month but subtract one which gives the end of the month
        MonthName = monthStart.Month switch
        {
            1 => "January",
            2 => "February",
            3 => "March",
            4 => "April",
            5 => "May",
            6 => "June",
            7 => "July",
            8 => "August",
            9 => "September",
            10 => "October",
            11 => "November",
            12 => "December",
            _ => "" // Default case
        };

        numberOfDummyColumn = (int)monthStart.DayOfWeek; // If it is tueday, give us 2
    }
}
